# Copyright (c) 2017-2018, The Linux Foundation. All rights reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#    * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided
# with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
# contributors may be used to endorse or promote products derived
# from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


type post_init, domain;
type post_init_exec, exec_type, vendor_file_type,file_type;
typeattribute post_init system_writes_vendor_properties_violators;

init_daemon_domain(post_init)
domain_auto_trans(init, post_init_exec, post_init)

allow post_init post_init_exec:file { rx_file_perms entrypoint };
allow post_init vendor_shell_exec:file {rx_file_perms entrypoint };
allow post_init vendor_toolbox_exec:file  rx_file_perms;
allow post_init { system_file rootfs vendor_shell_exec }:file execute_no_trans;
allow post_init self:socket { create_socket_perms_no_ioctl ioctl };
allowxperm post_init self:udp_socket ioctl { SIOCGIFINDEX SIOCGIFNAME };
allowxperm post_init self:socket ioctl { SIOCGIFINDEX SIOCGIFNAME };
allow post_init self:netlink_route_socket { create getopt setopt getattr setattr append bind connect read write nlmsg_write nlmsg_read };
allow post_init proc_board_id:file r_file_perms;
allow post_init vendor_can:file {read open getattr};
allow post_init vendor_can_set_bitrate:file {read open getattr};
allow post_init vendor_can_set_op_mode:file {read open getattr};
allow post_init vendor_can_masks:file {read open getattr};
allow post_init vendor_can_filters:file {read open getattr};

get_prop(post_init, vendor_can_masks);
set_prop(post_init, vendor_can_masks);
get_prop(post_init, vendor_can_filters);
set_prop(post_init, vendor_can_filters);
get_prop(post_init, vendor_can_set_op_mode);
set_prop(post_init, vendor_can_set_op_mode);
get_prop(post_init, vendor_can_set_bitrate);
set_prop(post_init, vendor_can_set_bitrate);

get_prop(post_init, vendor_can);
set_prop(post_init, vendor_can);

set_prop(post_init, hw_board_id);
set_prop(post_init, vendor_serialno);
set_prop(post_init, vib_set_profile);
get_prop(post_init, vib_set_profile);
set_prop(post_init, vib_get_profile);
get_prop(post_init, vib_get_profile);
